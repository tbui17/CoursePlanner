name: CI Action
description: ""
inputs:
  test_result_name:
    description: ""
    default: test_results
  configuration:
    description: ""
    default: Release

runs:
  using: composite
  steps:

    - name: "Restore/Build/Test"
      shell: bash
      continue-on-error: true
      run: dotnet test -c ${{inputs.configuration}} --filter FullyQualifiedName\!~BuildTests --logger trx --collect:"XPlat Code Coverage"

    - name: Upload Test Result Files
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.test_result_name }}
        overwrite: "true"
        path: ${{ github.workspace }}/**/TestResults/**/*
        retention-days: 1
        if-no-files-found: "error"

    - name: Combine Coverage Reports
      uses: danielpalme/ReportGenerator-GitHub-Action@v5.3.9
      with:
        reports: "**/*.cobertura.xml" # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        targetdir: "${{ github.workspace }}" # REQUIRED # The directory where the generated report should be saved.
        reporttypes: "Cobertura" # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary
        verbosity: "Info" # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
        title: "Code Coverage"
        tag: "${{ github.run_number }}_${{ github.run_id }}"
        toolpath: "reportgeneratortool" # Default directory for installing the dotnet tool.
        assemblyfilters: "-BuildLib;-BuildTests"



    - name: Download Code Coverage Report
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.test_result_name }}


    - name: Publish Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: "Cobertura.xml"
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: "10 30"

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2.17.1
      with:
        # NOTE: using trx_files instead of files due to https://github.com/EnricoMi/publish-unit-test-result-action/issues/424
        trx_files: "${{ github.workspace }}/**/*.trx"